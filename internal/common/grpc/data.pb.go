// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: data.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricType int32

const (
	MetricType_GAUGE   MetricType = 0
	MetricType_COUNTER MetricType = 1
)

// Enum value maps for MetricType.
var (
	MetricType_name = map[int32]string{
		0: "GAUGE",
		1: "COUNTER",
	}
	MetricType_value = map[string]int32{
		"GAUGE":   0,
		"COUNTER": 1,
	}
)

func (x MetricType) Enum() *MetricType {
	p := new(MetricType)
	*p = x
	return p
}

func (x MetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[0].Descriptor()
}

func (MetricType) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[0]
}

func (x MetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetricType.Descriptor instead.
func (MetricType) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

type Metric struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                              // имя метрики
	Type  MetricType             `protobuf:"varint,2,opt,name=type,proto3,enum=metrics.MetricType" json:"type,omitempty"` // тип метрики
	// Types that are valid to be assigned to Value:
	//
	//	*Metric_Delta
	//	*Metric_Val
	Value         isMetric_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metric) Reset() {
	*x = Metric{}
	mi := &file_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

func (x *Metric) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Metric) GetType() MetricType {
	if x != nil {
		return x.Type
	}
	return MetricType_GAUGE
}

func (x *Metric) GetValue() isMetric_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Metric) GetDelta() int64 {
	if x != nil {
		if x, ok := x.Value.(*Metric_Delta); ok {
			return x.Delta
		}
	}
	return 0
}

func (x *Metric) GetVal() float64 {
	if x != nil {
		if x, ok := x.Value.(*Metric_Val); ok {
			return x.Val
		}
	}
	return 0
}

type isMetric_Value interface {
	isMetric_Value()
}

type Metric_Delta struct {
	Delta int64 `protobuf:"varint,3,opt,name=delta,proto3,oneof"` // значение для counter
}

type Metric_Val struct {
	Val float64 `protobuf:"fixed64,4,opt,name=val,proto3,oneof"` // значение для gauge
}

func (*Metric_Delta) isMetric_Value() {}

func (*Metric_Val) isMetric_Value() {}

type MetricResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricResponse) Reset() {
	*x = MetricResponse{}
	mi := &file_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricResponse) ProtoMessage() {}

func (x *MetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricResponse.ProtoReflect.Descriptor instead.
func (*MetricResponse) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1}
}

func (x *MetricResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MetricResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_data_proto protoreflect.FileDescriptor

const file_data_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"data.proto\x12\ametrics\"v\n" +
	"\x06Metric\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x04type\x18\x02 \x01(\x0e2\x13.metrics.MetricTypeR\x04type\x12\x16\n" +
	"\x05delta\x18\x03 \x01(\x03H\x00R\x05delta\x12\x12\n" +
	"\x03val\x18\x04 \x01(\x01H\x00R\x03valB\a\n" +
	"\x05value\"D\n" +
	"\x0eMetricResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*$\n" +
	"\n" +
	"MetricType\x12\t\n" +
	"\x05GAUGE\x10\x00\x12\v\n" +
	"\aCOUNTER\x10\x012J\n" +
	"\x0eMetricsService\x128\n" +
	"\fUpdateMetric\x12\x0f.metrics.Metric\x1a\x17.metrics.MetricResponseB/Z-golang-metrics-collector/internal/common/grpcb\x06proto3"

var (
	file_data_proto_rawDescOnce sync.Once
	file_data_proto_rawDescData []byte
)

func file_data_proto_rawDescGZIP() []byte {
	file_data_proto_rawDescOnce.Do(func() {
		file_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_data_proto_rawDesc), len(file_data_proto_rawDesc)))
	})
	return file_data_proto_rawDescData
}

var file_data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_data_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_data_proto_goTypes = []any{
	(MetricType)(0),        // 0: metrics.MetricType
	(*Metric)(nil),         // 1: metrics.Metric
	(*MetricResponse)(nil), // 2: metrics.MetricResponse
}
var file_data_proto_depIdxs = []int32{
	0, // 0: metrics.Metric.type:type_name -> metrics.MetricType
	1, // 1: metrics.MetricsService.UpdateMetric:input_type -> metrics.Metric
	2, // 2: metrics.MetricsService.UpdateMetric:output_type -> metrics.MetricResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_data_proto_init() }
func file_data_proto_init() {
	if File_data_proto != nil {
		return
	}
	file_data_proto_msgTypes[0].OneofWrappers = []any{
		(*Metric_Delta)(nil),
		(*Metric_Val)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_data_proto_rawDesc), len(file_data_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_proto_goTypes,
		DependencyIndexes: file_data_proto_depIdxs,
		EnumInfos:         file_data_proto_enumTypes,
		MessageInfos:      file_data_proto_msgTypes,
	}.Build()
	File_data_proto = out.File
	file_data_proto_goTypes = nil
	file_data_proto_depIdxs = nil
}
